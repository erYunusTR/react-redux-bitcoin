{"version":3,"sources":["components/App/App.styles.js","constants/constants.js","components/OrderBook/OrderBook.js","components/OrderBook/OrderBook.styles.js","components/OrderBook/index.js","components/LiveOrders/LiveOrders.js","components/LiveOrders/LiveOrders.styles.js","components/LiveOrders/index.js","components/LiveTrades/LiveTrades.js","components/LiveTrades/LiveTrades.styles.js","components/LiveTrades/index.js","components/AdvancedChart/AdvancedChart.js","components/AdvancedChart/AdvancedChart.styles.js","components/AdvancedChart/index.js","components/App/App.js","serviceWorker.js","store/location.js","store/reducers.js","index.js","store/createStore.js"],"names":["gridItemColor","API_URL","CURRENCY_PAIR","useStyles","makeStyles","theme","root","margin","table","borderCollapse","width","fontSize","color","paddingTop","tableHeader","asksPriceColumn","bidsPriceColumn","priceTh","textAlign","amountTh","totalTh","priceColumn","amountColumn","totalColumn","TableHeader","classes","className","colSpan","OrderBook","useState","orders","setOrders","ASKS","useEffect","subscribe","event","data","channel","ws","WebSocket","onopen","send","JSON","stringify","onmessage","response","parse","onclose","close","array","bids","asks","limitArray","length","slice","orderRows","type","map","item","index","price","parseFloat","amount","total","clsx","toFixed","sort","a","b","reverse","sortArrayBigToSmall","sellPriceColumn","buyPriceColumn","timeColumn","LiveOrders","LIVE_ORDERS_TABLE_LIMIT","dateTime","datetime","orderType","parseInt","order_type","moment","unix","format","typeTh","typeColumn","LiveTrades","LIVE_TRADES_TABLE_LIMIT","timestamp","height","AdvancedChart","autosize","symbol","toUpperCase","interval","style","locale","toolbar_bg","app","gridContainer","display","minWidth","backgroundColor","gap","gridTemplateAreas","gridTemplateColumns","gridTemplateRows","orderBook","gridArea","liveOrders","liveTrades","overflow","overflowX","advancedChart","left","right","App","Boolean","window","location","hostname","match","LOCATION_CHANGE","locationReducer","state","action","payload","makeRootReducer","asyncReducers","combineReducers","store","initialState","enhancers","devToolsExtension","__REDUX_DEVTOOLS_EXTENSION__","push","middleware","thunk","createStore","compose","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b73f3b1.chunk.js","sourcesContent":["const gridContainerColor = \"#252930\"\nconst gridItemColor = \"#161a1e\"\n\nexport default theme => ({\n    app: {\n        width: \"100%\",\n        height: \"100%\"\n    },\n    gridContainer: {\n        display: \"grid\",\n        width: \"100%\",\n        height: \"100%\",\n        minWidth: 0,\n        backgroundColor: gridContainerColor,\n        gap: \"1px\",\n        gridTemplateAreas: `\n                             \"left orderBook advancedChart liveOrders right\"                        \n                             \"left orderBook liveTrades liveOrders right\"\n                           `,\n        gridTemplateColumns: \"1fr minmax(253px, 320px) minmax(510px, 880px) minmax(253px, 320px) 1fr\",\n        gridTemplateRows: \"minmax(auto, 70vh) minmax(auto, 30vh)\",\n    },\n    orderBook: {\n        gridArea: \"orderBook\",\n        backgroundColor: gridItemColor\n    },\n    liveOrders: {\n        gridArea: \"liveOrders\",\n        backgroundColor: gridItemColor\n    },\n    liveTrades: {\n        gridArea: \"liveTrades\",\n        backgroundColor: gridItemColor,\n        overflow: \"auto\",\n        overflowX: \"hidden\"\n    },\n    advancedChart: {\n        gridArea: \"advancedChart\",\n        backgroundColor: gridItemColor\n    },\n    left: {\n        gridArea: \"left\",\n        backgroundColor: gridItemColor\n    },\n    right: {\n        gridArea: \"right\",\n        backgroundColor: gridItemColor\n    }\n})","export const API_URL = 'wss://ws.bitstamp.net';\r\nexport const CURRENCY_PAIR = 'btcusd';\r\n\r\nexport const PRICE_DIGITS = 2;\r\nexport const AMOUNT_DIGITS = 5;\r\nexport const TOTAL_DIGITS = 5;\r\n\r\n// ORDER BOOK\r\nexport const ORDER_BOOK_TABLE_LIMIT = 15;\r\n\r\n//LIVE ORDERS\r\nexport const LIVE_ORDERS_TABLE_LIMIT = 30;\r\n\r\n//LIVE TRADES\r\nexport const LIVE_TRADES_TABLE_LIMIT = 50;","import React, {useEffect, useState} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport styles from './OrderBook.styles'\nimport {\n    API_URL,\n    CURRENCY_PAIR,\n    PRICE_DIGITS,\n    AMOUNT_DIGITS,\n    TOTAL_DIGITS,\n    ORDER_BOOK_TABLE_LIMIT\n} from \"../../constants/constants\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(styles)\n\nfunction TableHeader() {\n    const classes = useStyles()\n\n    return (\n        <thead className={classes.tableHeader}>\n        <tr>\n            <th colSpan=\"3\">{\"ORDER BOOK\"}</th>\n        </tr>\n        <tr>\n            <th className={classes.priceTh}>Price(USD)</th>\n            <th className={classes.amountTh}>Amount(BTC)</th>\n            <th className={classes.totalTh}>Total</th>\n        </tr>\n        </thead>\n    );\n}\n\nfunction OrderBook() {\n    const classes = useStyles()\n    const [orders, setOrders] = useState([]);\n    const ASKS = \"ASKS\"\n    const BIDS = \"BIDS\"\n\n    useEffect(() => {\n        const subscribe = {\n            event: 'bts:subscribe',\n            data: {\n                channel: `order_book_${CURRENCY_PAIR}`\n            }\n        };\n        const ws = new WebSocket(API_URL);\n\n        ws.onopen = () => {\n            ws.send(JSON.stringify(subscribe));\n        };\n        ws.onmessage = (event) => {\n            const response = JSON.parse(event.data);\n            setOrders(response.data);\n        };\n        ws.onclose = () => {\n            ws.close();\n        };\n\n        return () => {\n            ws.close();\n        };\n    }, []);\n\n    const {bids, asks} = orders;\n\n    const sortArrayBigToSmall = (array) => {\n        return array && array.sort((a, b) => (a[0] + b[0]))\n    }\n\n    const sortArraySmallToBig = (array) => {\n        return array && array.sort((a, b) => (a[0] - b[0]))\n    }\n\n    const limitArray = (array) => {\n        if (array.length > ORDER_BOOK_TABLE_LIMIT) {\n            let newArray = []\n            newArray = array.slice(0, ORDER_BOOK_TABLE_LIMIT)\n            return newArray\n        } else {\n            return array\n        }\n    }\n\n    const orderRows = (array, type) => (\n        array &&\n        array.map((item, index) => {\n            const price = parseFloat(item[0]);\n            const amount = parseFloat(item[1]);\n            const total = item[0] * item[1];\n            return (\n                <tr key={index}>\n                    <td className={clsx(classes.priceColumn, type === ASKS ? classes.asksPriceColumn : classes.bidsPriceColumn)}> {price.toFixed(PRICE_DIGITS)} </td>\n                    <td className={classes.amountColumn}> {amount.toFixed(AMOUNT_DIGITS)} </td>\n                    <td className={classes.totalColumn}> {total.toFixed(TOTAL_DIGITS)} </td>\n                </tr>\n            )\n        })\n    );\n\n    return (\n        <div className={classes.root}>\n            <table className={classes.table}>\n                <TableHeader/>\n                {/*Order book asks*/}\n                <tbody>{asks && orderRows(limitArray(sortArraySmallToBig(asks)).reverse(), ASKS)}</tbody>\n                {/*Order book bids*/}\n                <tbody>{bids && orderRows(limitArray(sortArrayBigToSmall(bids)), BIDS)}</tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default OrderBook\n","export default theme => ({\n    root: {\n        margin: 10\n    },\n    table: {\n        borderCollapse: \"collapse\",\n        width: \"100%\",\n        fontSize: 12,\n        color: \"#b7bdc6\",\n        margin: \"auto\",\n        paddingTop: 10,\n    },\n    tableHeader: {\n        color: \"#848e9c\"\n    },\n    asksPriceColumn: {\n        color: \"#f6465d\"\n    },\n    bidsPriceColumn: {\n        color: \"#0ecb81\"\n    },\n    priceTh: {\n        textAlign: \"left\"\n    },\n    amountTh: {\n        textAlign: \"right\"\n    },\n    totalTh: {\n        textAlign: \"right\"\n    },\n    priceColumn: {\n        textAlign: \"left\"\n    },\n    amountColumn: {\n        textAlign: \"right\"\n    },\n    totalColumn: {\n        textAlign: \"right\"\n    }\n})\n","import OrderBook from './OrderBook'\n\nexport default OrderBook\n","import React, {useEffect, useState} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport styles from './LiveOrders.styles'\nimport {\n    API_URL,\n    CURRENCY_PAIR,\n    LIVE_ORDERS_TABLE_LIMIT,\n    AMOUNT_DIGITS,\n    PRICE_DIGITS\n} from \"../../constants/constants\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(styles)\n\nfunction TableHeader() {\n    const classes = useStyles()\n\n    return (\n        <thead className={classes.tableHeader}>\n        <tr>\n            <th colSpan=\"3\">{\"LIVE ORDERS\"}</th>\n        </tr>\n        <tr>\n            <th className={classes.priceTh}>Price(USD)</th>\n            <th className={classes.amountTh}>Amount(BTC)</th>\n            <th className={classes.totalTh}>Time</th>\n        </tr>\n        </thead>\n    );\n}\n\nfunction LiveOrders() {\n    const classes = useStyles()\n    const [orders, setOrders] = useState([]);\n\n    useEffect(() => {\n        const subscribe = {\n            event: 'bts:subscribe',\n            data: {\n                channel: `live_orders_${CURRENCY_PAIR}`\n            }\n        };\n\n        const ws = new WebSocket(API_URL);\n\n        ws.onopen = () => {\n            ws.send(JSON.stringify(subscribe));\n        };\n        ws.onmessage = (event) => {\n            const response = JSON.parse(event.data);\n            setOrders(orders => [response.data, ...orders.slice(0, LIVE_ORDERS_TABLE_LIMIT - 1)]);\n        };\n        ws.onclose = () => {\n            ws.close();\n        };\n\n        return () => {\n        };\n    }, []);\n\n    const orderRows = (array) => (\n        array &&\n        array.map((item, index) => {\n            const price = parseFloat(item.price);\n            const amount = parseFloat(item.amount);\n            const dateTime = item.datetime;\n            const orderType = parseInt(item.order_type);\n\n            if (price && amount) {\n                return (\n                    <tr key={index}>\n                        <td className={clsx(classes.priceColumn, orderType == 0 ? classes.buyPriceColumn : classes.sellPriceColumn)}> {price.toFixed(PRICE_DIGITS)} </td>\n                        <td className={classes.amountColumn}> {amount.toFixed(AMOUNT_DIGITS)} </td>\n                        <td className={classes.timeColumn}>{moment.unix(dateTime).format(\"HH:mm:ss\")}</td>\n                    </tr>\n                )\n            }\n        })\n    );\n\n    return (\n        <div className={classes.root}>\n            <table className={classes.table}>\n                <TableHeader/>\n                <tbody>{orders && orderRows(orders)}</tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default LiveOrders\n","export default theme => ({\n    root: {\n        margin: 10\n    },\n    table: {\n        borderCollapse: \"collapse\",\n        width: \"100%\",\n        fontSize: 12,\n        color: \"#b7bdc6\",\n        margin: \"auto\",\n        paddingTop: 10\n    },\n    tableHeader: {\n        color: \"#848e9c\"\n    },\n    sellPriceColumn: {\n        color: \"#f6465d\"\n    },\n    buyPriceColumn: {\n        color: \"#0ecb81\"\n    },\n    priceTh: {\n        textAlign: \"left\"\n    },\n    amountTh: {\n        textAlign: \"right\"\n    },\n    totalTh: {\n        textAlign: \"right\"\n    },\n    priceColumn: {\n        textAlign: \"left\"\n    },\n    amountColumn: {\n        textAlign: \"right\"\n    },\n    timeColumn: {\n        textAlign: \"right\"\n    }\n})\n","import LiveOrders from './LiveOrders'\n\nexport default LiveOrders\n","import React, {useEffect, useState} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport styles from './LiveTrades.styles'\nimport {\n    API_URL,\n    CURRENCY_PAIR,\n    AMOUNT_DIGITS,\n    PRICE_DIGITS,\n    LIVE_TRADES_TABLE_LIMIT\n} from \"../../constants/constants\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(styles)\n\nfunction TableHeader() {\n    const classes = useStyles()\n\n    return (\n        <thead className={classes.tableHeader}>\n        <tr>\n            <th colSpan=\"4\">{\"LIVE TRADES\"}</th>\n        </tr>\n        <tr>\n            <th className={classes.typeTh}>Type</th>\n            <th className={classes.priceTh}>Price(USD)</th>\n            <th className={classes.amountTh}>Amount(BTC)</th>\n            <th className={classes.totalTh}>Time</th>\n        </tr>\n        </thead>\n    );\n}\n\nfunction LiveTrades() {\n    const classes = useStyles()\n    const [orders, setOrders] = useState([]);\n\n    useEffect(() => {\n        const subscribe = {\n            event: 'bts:subscribe',\n            data: {\n                channel: `live_trades_${CURRENCY_PAIR}`\n            }\n        };\n\n        const ws = new WebSocket(API_URL);\n\n        ws.onopen = () => {\n            ws.send(JSON.stringify(subscribe));\n        };\n        ws.onmessage = (event) => {\n            const response = JSON.parse(event.data);\n            setOrders(orders => [response.data, ...orders.slice(0, LIVE_TRADES_TABLE_LIMIT - 1)]);\n        };\n        ws.onclose = () => {\n            ws.close();\n        };\n\n        return () => {\n        };\n    }, []);\n\n    const orderRows = (array) => (\n        array &&\n        array.map((item, index) => {\n            const price = parseFloat(item.price);\n            const amount = parseFloat(item.amount);\n            const dateTime = item.timestamp;\n            const type = parseInt(item.type);\n\n            if (price && amount) {\n                return (\n                    <tr key={index}>\n                        <td className={clsx(classes.typeColumn, type == 0 ? classes.buyPriceColumn : classes.sellPriceColumn)}> {type == 0 ? \"BUY\" : \"SELL\"} </td>\n                        <td className={classes.priceColumn}> {price.toFixed(PRICE_DIGITS)} </td>\n                        <td className={classes.amountColumn}> {amount.toFixed(AMOUNT_DIGITS)} </td>\n                        <td className={classes.timeColumn}>{moment.unix(dateTime).format(\"HH:mm:ss\")}</td>\n                    </tr>\n                )\n            }\n        })\n    );\n\n    return (\n        <div className={classes.root}>\n            <table className={classes.table}>\n                <TableHeader/>\n                <tbody>{orders && orderRows(orders)}</tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default LiveTrades\n","export default theme => ({\n  root: {\n    margin: 10\n  },\n  table: {\n    borderCollapse: \"collapse\",\n    width: \"100%\",\n    fontSize: 12,\n    color: \"#b7bdc6\",\n    margin: \"auto\",\n    paddingTop: 10\n  },\n  tableHeader: {\n    color: \"#848e9c\"\n  },\n  sellPriceColumn: {\n    color: \"#f6465d\"\n  },\n  buyPriceColumn: {\n    color: \"#0ecb81\"\n  },\n  typeTh: {\n    textAlign: \"left\"\n  },\n  priceTh: {\n    textAlign: \"right\"\n  },\n  amountTh: {\n    textAlign: \"right\"\n  },\n  totalTh: {\n    textAlign: \"right\"\n  },\n  typeColumn: {\n    textAlign: \"left\"\n  },\n  priceColumn: {\n    textAlign: \"right\"\n  },\n  amountColumn: {\n    textAlign: \"right\"\n  },\n  timeColumn: {\n    textAlign: \"right\"\n  }\n})\n","import LiveTrades from './LiveTrades'\n\nexport default LiveTrades\n","import React, {useEffect} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport styles from './AdvancedChart.styles'\nimport TradingViewWidget from 'react-tradingview-widget';\nimport {CURRENCY_PAIR} from \"../../constants/constants\";\n\nconst useStyles = makeStyles(styles)\n\nfunction AdvancedChart() {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <TradingViewWidget\n                autosize\n                symbol={CURRENCY_PAIR.toUpperCase()}\n                interval=\"15\"\n                theme=\"Dark\"\n                style=\"1\"\n                locale=\"tr\"\n                toolbar_bg=\"#161a1e\"\n            />\n        </div>\n\n    )\n}\n\nexport default AdvancedChart\n","export default theme => ({\n    root: {\n        height: \"100%\",\n        width: \"100%\"\n    }\n})\n","import AdvancedChart from './AdvancedChart'\n\nexport default AdvancedChart\n","import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport styles from './App.styles'\nimport {Grid} from \"@material-ui/core\";\nimport OrderBook from \"../OrderBook\";\nimport LiveOrders from \"../LiveOrders\";\nimport LiveTrades from \"../LiveTrades\";\nimport AdvancedChart from \"../AdvancedChart\";\n\nconst useStyles = makeStyles(styles)\n\nfunction App() {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.app}>\n            <div className={classes.gridContainer}>\n                <div className={classes.orderBook}>\n                    <OrderBook/>\n                </div>\n                <div className={classes.liveOrders}>\n                    <LiveOrders/>\n                </div>\n                <div className={classes.liveTrades}>\n                    <LiveTrades/>\n                </div>\n                <div className={classes.advancedChart}>\n                    <AdvancedChart/>\n                </div>\n                <div className={classes.left}/>\n                <div className={classes.right}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","// ------------------------------------\n// Constants\n// ------------------------------------\nexport const LOCATION_CHANGE = 'LOCATION_CHANGE'\n\n// ------------------------------------\n// Actions\n// ------------------------------------\nexport function locationChange(location = '/') {\n    return {\n        type: LOCATION_CHANGE,\n        payload: location\n    }\n}\n\n// ------------------------------------\n// Specialized Action Creator\n// ------------------------------------\nexport function updateLocation({dispatch}) {\n    return (nextLocation) => dispatch(locationChange(nextLocation))\n}\n\n// ------------------------------------\n// Reducer\n// ------------------------------------\nconst initialState = null\nexport default function locationReducer(state = initialState, action) {\n    return action.type === LOCATION_CHANGE ? action.payload : state\n}\n","import {combineReducers} from 'redux'\r\n\r\nimport locationReducer from './location'\r\n\r\nexport function makeRootReducer(asyncReducers) {\r\n    return combineReducers({\r\n        // Add sync reducers here\r\n        location: locationReducer,\r\n        ...asyncReducers\r\n    })\r\n}\r\n\r\nexport function injectReducer(store, {key, reducer}) {\r\n    store.asyncReducers[key] = reducer // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(makeRootReducer(store.asyncReducers))\r\n}\r\n\r\nexport default makeRootReducer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport {Provider} from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport createStore from './store/createStore'\n\nconst store = createStore()\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {applyMiddleware, compose, createStore} from 'redux'\r\nimport makeRootReducer from './reducers'\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default function createReduxStore(initialState = {}) {\r\n    // ======================================================\r\n    // Store Enhancers\r\n    // ======================================================\r\n    const enhancers = []\r\n\r\n    if (window && window.location && window.location.hostname === 'localhost') {\r\n        const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\r\n        if (typeof devToolsExtension === 'function') {\r\n            enhancers.push(devToolsExtension())\r\n        }\r\n    }\r\n\r\n    // ======================================================\r\n    // Middleware Configuration\r\n    // ======================================================\r\n    const middleware = [\r\n        // This is where you add other middleware like redux-observable\r\n        thunk\r\n    ]\r\n\r\n    // ======================================================\r\n    // Store Instantiation and HMR Setup\r\n    // ======================================================\r\n    const store = createStore(\r\n        makeRootReducer(),\r\n        initialState,\r\n        compose(applyMiddleware(...middleware), ...enhancers)\r\n    )\r\n\r\n    store.asyncReducers = {}\r\n\r\n    if (module.hot) {\r\n        module.hot.accept('./reducers', () => {\r\n            const reducers = require('./reducers').default // eslint-disable-line global-require\r\n            store.replaceReducer(reducers(store.asyncReducers))\r\n        })\r\n    }\r\n\r\n    return store\r\n}\r\n"],"sourceRoot":""}